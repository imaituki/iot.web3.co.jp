<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

/**
 * Top_calendarクラス
 */
class Top_calendar extends Search_Controller 
{

	const F_START    = 'start';
	const F_END      = 'end';
	const F_ID       = 'id';
	const F_STAFF_ID = 'staff_id';

    //eventsカラー
	const F_NOATTENDANCE = '#ff0000'; //未出勤
	const F_ATTENDANCE   = '#ff9900'; //出勤(予定)
	const F_WORKING      = '#9900ff'; //作業中
	const F_CLOSE        = '#3A87AD'; //終了
 
	/**
	 * コンストラクタ
	 */
	public function __construct()
	{
		parent::__construct();
		$this->package_name = 'top';
		$this->package_label = config_item("{$this->package_name}_package_name_label");
		$this->current_main_menu = $this->package_name;
		$this->main_model = $this->T_calendar;
		$this->attendance_model = $this->T_attendance;
		$this->_page_setting();

		//設定ファイルから画面の設定を読み込む処理。
		$this->_config_setting();

		/*
		 * この機能に必要な情報がセッションに保持されているか確認する
		 */

		if ( ! $this->application_session_data->can_access_package($this->package_name))
		{
			show_error('不正な画面遷移が行われています。再度メニューから操作を行ってください。');
		}

		//HTTPのGET,POST情報を$this->dataに移送
		$this->_httpinput_to_data();
	}

	/**
	 * 初期表示を行う。
	 */
	public function index()
	{
		$this->_unset_page_session();
	    return $this->search();
	}

	/**
	 * 初期表示を行う。
	 */
	public function update()
	{
        $this->main_model->setReserveDatatime($this->data[self::F_START], $this->data[self::F_END], $this->data[self::F_ID]);
		$this->_unset_page_session();
	    return $this->search();
	}

	/**
	 * 予定を取得
	 */
	public function search()
	{
        if( $this->login_user->account_type == User_const::ACCOUNT_TYPE_ADMIN ){
            $arrRet = $this->main_model->getReserveData($this->data[self::F_START], $this->data[self::F_STAFF_ID]);
        } else {
            $staff_array = $this->M_user->getStaffByUserCode($this->login_user->user_code, User_const::ACCOUNT_TYPE_COMMON);
            foreach ($staff_array as $key => $val)
            {
                $arrRet = $this->main_model->getReserveData($this->data[self::F_START], $key);
            }
        }
        $this->setJsonData($arrRet);
	}

    public function setJsonData($arrData)
    {
		$value_array = array();
        $color_array = array(1 => self::F_WORKING, 2 => self::F_CLOSE); //1:作業中 2:終了

        foreach ($arrData as $val)
        {
            //true:出勤(予定) false:未出勤
            $color = ($this->attendance_model->is_attendance_exists($val->staff_id, $this->data[self::F_START])) ? self::F_ATTENDANCE : self::F_NOATTENDANCE;
            $value_array[] = array(
		    	'id' => $val->id,
		    	'staff_id' => $val->staff_id,
			    'title' => $val->user_name . "<br />" 
                        . '<a href="'. site_url('reserve/reserve_detail/index/'.$val->id) . '">' . $val->construction_name . '</a>' . "<br />" 
                        . $val->construction_address,
    			'start' => $val->reserve_date . ' ' . $val->reserve_time_start,
    			'end' => $val->reserve_date . ' ' . $val->reserve_time_end,
//	    		'url' => site_url("reserve/reserve_detail/index/$val->id"),
    			'color' => ($val->reserve_status > 0) ? $color_array[$val->reserve_status] : $color,
    			'textColor' => '#000000',
                'allDay' => false
            );
        }
        $this->output
            ->set_content_type('application/json')
            ->set_output(json_encode($value_array));
    }

/*
    public function setJsonData($arrData)
    {
		$value_array = array();
        $color_array = array(1 => self::F_WORKING, 2 => self::F_CLOSE); //1:作業中 2:終了

        foreach ($arrData as $val)
        {
            //true:出勤(予定) false:未出勤
            $color = ($this->attendance_model->is_attendance_exists($val->staff_id, $this->data[self::F_START])) ? self::F_ATTENDANCE : self::F_NOATTENDANCE;
            $value_array[] = array(
		    	'id' => $val->id,
		    	'staff_id' => $val->staff_id,
			    'title' => $val->user_name . "<br />" 
                        . '<a href="'. site_url('reserve/reserve_detail/index/'.$val->id) . '">' . $val->construction_name . '</a>' . "<br />" 
                        . '<a href="http://maps.google.com/maps?q=' . $val->latitude . ',' . $val->longitude . '" target="_blank">' . $val->construction_address . '</a>',
    			'start' => $val->reserve_date . ' ' . $val->reserve_time_start,
    			'end' => $val->reserve_date . ' ' . $val->reserve_time_end,
//	    		'url' => site_url("reserve/reserve_detail/index/$val->id"),
    			'color' => ($val->reserve_status > 0) ? $color_array[$val->reserve_status] : $color,
    			'textColor' => '#000000',
                'allDay' => false
            );
        }
        $this->output
            ->set_content_type('application/json')
            ->set_output(json_encode($value_array));
    }
*/

}
